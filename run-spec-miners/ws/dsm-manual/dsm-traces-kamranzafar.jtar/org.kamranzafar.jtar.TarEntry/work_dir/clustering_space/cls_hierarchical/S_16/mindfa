digraph Automata {
rankdir=LR
size="8,5"
	node [shape=star]
	C16
	node [shape=doublecircle]
	C20
	node [shape=circle]
	C10 -> C2 [label="computeCheckSum([B)J"]
	C0 -> C0 [label="computeCheckSum([B)J"]
	C15 -> C18 [label="getSize()J"]
	C12 -> C12 [label="isDirectory()Z"]
	C12 -> C12 [label="computeCheckSum([B)J"]
	C1 -> C10 [label="getName()Ljava/lang/String;"]
	C2 -> C2 [label="computeCheckSum([B)J"]
	C1 -> C1 [label="getSize()J"]
	C17 -> C1 [label="getName()Ljava/lang/String;"]
	C2 -> C2 [label="extractTarHeader(Ljava/lang/String;)V"]
	C19 -> C14 [label="computeCheckSum([B)J"]
	C0 -> C0 [label="isDirectory()Z"]
	C10 -> C4 [label="getSize()J"]
	C4 -> C4 [label="computeCheckSum([B)J"]
	C2 -> C1 [label="isDirectory()Z"]
	C4 -> C4 [label="parseTarHeader([B)V"]
	C1 -> C1 [label="isDirectory()Z"]
	C0 -> C0 [label="extractTarHeader(Ljava/lang/String;)V"]
	C16 -> C19 [label="writeEntryHeader([B)V"]
	C2 -> C2 [label="parseTarHeader([B)V"]
	C4 -> C2 [label="extractTarHeader(Ljava/lang/String;)V"]
	C10 -> C2 [label="writeEntryHeader([B)V"]
	C10 -> C2 [label="parseTarHeader([B)V"]
	C10 -> C1 [label="isDirectory()Z"]
	C12 -> C12 [label="parseTarHeader([B)V"]
	C1 -> C1 [label="writeEntryHeader([B)V"]
	C2 -> C2 [label="getSize()J"]
	C12 -> C4 [label="getName()Ljava/lang/String;"]
	C4 -> C4 [label="writeEntryHeader([B)V"]
	C4 -> C4 [label="getSize()J"]
	C0 -> C0 [label="getSize()J"]
	C0 -> C0 [label="writeEntryHeader([B)V"]
	C2 -> C20 [label=<END>]
	C4 -> C4 [label="getName()Ljava/lang/String;"]
	C14 -> C15 [label="isDirectory()Z"]
	C2 -> C10 [label="getName()Ljava/lang/String;"]
	C1 -> C1 [label="parseTarHeader([B)V"]
	C12 -> C12 [label="writeEntryHeader([B)V"]
	C10 -> C2 [label="extractTarHeader(Ljava/lang/String;)V"]
	C4 -> C20 [label=<END>]
	C2 -> C2 [label="writeEntryHeader([B)V"]
	C4 -> C12 [label="isDirectory()Z"]
	C1 -> C1 [label="computeCheckSum([B)J"]
	C10 -> C20 [label=<END>]
	C12 -> C1 [label="extractTarHeader(Ljava/lang/String;)V"]
	C10 -> C10 [label="getName()Ljava/lang/String;"]
	C1 -> C1 [label="extractTarHeader(Ljava/lang/String;)V"]
	C0 -> C17 [label="parseTarHeader([B)V"]
	C18 -> C0 [label="extractTarHeader(Ljava/lang/String;)V"]
	C12 -> C4 [label="getSize()J"]
}
