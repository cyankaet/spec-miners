digraph Automata {
rankdir=LR
size="8,5"
	node [shape=star]
	C2
	node [shape=doublecircle]
	C5
	node [shape=circle]
	C0 -> C0 [label="parseTarHeader([B)V"]
	C0 -> C0 [label="computeCheckSum([B)J"]
	C0 -> C5 [label=<END>]
	C1 -> C4 [label="parseTarHeader([B)V"]
	C0 -> C0 [label="getSize()J"]
	C0 -> C0 [label="getName()Ljava/lang/String;"]
	C3 -> C1 [label="extractTarHeader(Ljava/lang/String;)V"]
	C2 -> C2 [label="computeCheckSum([B)J"]
	C1 -> C1 [label="getSize()J"]
	C0 -> C0 [label="writeEntryHeader([B)V"]
	C4 -> C0 [label="getName()Ljava/lang/String;"]
	C0 -> C0 [label="isDirectory()Z"]
	C2 -> C2 [label="writeEntryHeader([B)V"]
	C3 -> C3 [label="getSize()J"]
	C1 -> C1 [label="isDirectory()Z"]
	C0 -> C0 [label="extractTarHeader(Ljava/lang/String;)V"]
	C1 -> C1 [label="computeCheckSum([B)J"]
	C2 -> C3 [label="isDirectory()Z"]
	C1 -> C1 [label="extractTarHeader(Ljava/lang/String;)V"]
	C1 -> C1 [label="writeEntryHeader([B)V"]
}
