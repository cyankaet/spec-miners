Avg. time per line: 0,21ms, 15593 lines remaining.  ETA: 0h 0m 3s
Avg. time per line: 0,12ms, 13861 lines remaining.  ETA: 0h 0m 1s
Avg. time per line: 0,10ms, 12129 lines remaining.  ETA: 0h 0m 1s
Avg. time per line: 0,08ms, 10397 lines remaining.  ETA: 0h 0m 0s
Avg. time per line: 0,36ms, 8665 lines remaining.  ETA: 0h 0m 3s
Avg. time per line: 0,70ms, 6933 lines remaining.  ETA: 0h 0m 4s
Avg. time per line: 0,75ms, 5201 lines remaining.  ETA: 0h 0m 3s
Avg. time per line: 0,66ms, 3469 lines remaining.  ETA: 0h 0m 2s
Avg. time per line: 0,64ms, 1737 lines remaining.  ETA: 0h 0m 1s
Avg. time per line: 0,65ms, 5 lines remaining.  ETA: 0h 0m 0s
--------------------------------------------------------------------------------
Mined 22 Specifications:
--------------------------------------------------------------------------------
Specification 1:
(
  org.apache.maven.surefire.booter.ForkingRunListener.toString(BLorg/apache/maven/surefire/report/ReportEntry;Ljava/lang/Integer;)Ljava/lang/String;
  org.apache.maven.surefire.report.ReportEntry.getSourceName()Ljava/lang/String;
  org.apache.maven.surefire.report.ReportEntry.getName()Ljava/lang/String;
  org.apache.maven.surefire.report.ReportEntry.getGroup()Ljava/lang/String;
  org.apache.maven.surefire.report.ReportEntry.getMessage()Ljava/lang/String;
  org.apache.maven.surefire.report.ReportEntry.getElapsed()Ljava/lang/Integer;
  org.apache.maven.surefire.booter.ForkingRunListener.nullableEncoding(Ljava/lang/StringBuffer;Ljava/lang/Integer;)V
  org.apache.maven.surefire.report.ReportEntry.getStackTraceWriter()Lorg/apache/maven/surefire/report/StackTraceWriter;
  org.apache.maven.surefire.booter.ForkingRunListener.encode(Ljava/lang/StringBuffer;Lorg/apache/maven/surefire/report/StackTraceWriter;)V
  org.apache.maven.surefire.common.junit4.JUnit4RunListener.extractClassName(Lorg/junit/runner/Description;)Ljava/lang/String;
  java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
  java.util.regex.Matcher.find()Z
  java.util.regex.Matcher.group(I)Ljava/lang/String;
)*

--------------------------------------------------------------------------------
Specification 2:
(
  java.util.Enumeration.hasMoreElements()Z
  java.util.Enumeration.nextElement()Ljava/lang/Object;
  org.apache.maven.surefire.booter.ForkingRunListener.toPropertyString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  org.apache.maven.surefire.booter.ForkingRunListener.append(Ljava/lang/StringBuffer;B)Lorg/apache/maven/surefire/booter/ForkingRunListener;
  (
     java.io.Writer.write(I)V
   | org.apache.maven.surefire.booter.ForkingRunListener.append(Ljava/lang/StringBuffer;Ljava/lang/String;)Lorg/apache/maven/surefire/booter/ForkingRunListener;
   | org.apache.maven.surefire.booter.ForkingRunListener.comma(Ljava/lang/StringBuffer;)V
   | org.apache.maven.surefire.booter.ForkingRunListener.encode(Ljava/lang/String;)Ljava/lang/String;
  )*
  java.io.PrintStream.print(Ljava/lang/String;)V
)*

--------------------------------------------------------------------------------
Specification 3:
(
  org.junit.runners.BlockJUnit4ClassRunner.runLeaf(Lorg/junit/runners/model/Statement;Lorg/junit/runner/Description;Lorg/junit/runner/notification/RunNotifier;)V
  (
     org.junit.runner.notification.RunListener.testStarted(Lorg/junit/runner/Description;)V
  )*
  org.junit.runners.BlockJUnit4ClassRunner$2.run()Ljava/lang/Object;
  org.junit.runners.BlockJUnit4ClassRunner.withAfters(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;
  org.junit.runner.notification.RunNotifier$9.run()V
)*

--------------------------------------------------------------------------------
Specification 4:
(
  java.io.File.exists()Z
  (
     java.util.Map$Entry.getKey()Ljava/lang/Object;
   | java.util.Map$Entry.getValue()Ljava/lang/Object;
   | java.util.Set.contains(Ljava/lang/Object;)Z
  )*
  org.kamranzafar.jtar.TarEntry.extractTarHeader(Ljava/lang/String;)V
)*

--------------------------------------------------------------------------------
Specification 5:
(
  org.kamranzafar.jtar.TarEntry.parseTarHeader([B)V
  (
     org.kamranzafar.jtar.TarInputStream.read([B)I
  )*
  java.io.BufferedOutputStream.close()V
  org.kamranzafar.jtar.TarInputStream.skipPad()V
)*

--------------------------------------------------------------------------------
Specification 6:
(
  org.junit.runners.ParentRunner.describeChild(Ljava/lang/Object;)Lorg/junit/runner/Description;
  java.util.concurrent.ConcurrentMap.get(Ljava/lang/Object;)Ljava/lang/Object;
  org.junit.runner.Description.addChild(Lorg/junit/runner/Description;)V
  java.util.Collection.add(Ljava/lang/Object;)Z
)*

--------------------------------------------------------------------------------
Specification 7:
(
  java.io.PrintStream.println(Ljava/lang/String;)V
  org.apache.maven.surefire.report.ConsoleOutputReceiver.writeTestOutput([BIIZ)V
  java.io.BufferedOutputStream.flush()V
)*

--------------------------------------------------------------------------------
Specification 8:
(
  java.util.Iterator.hasNext()Z
  java.util.Iterator.next()Ljava/lang/Object;
  java.util.Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;
)*

--------------------------------------------------------------------------------
Specification 9:
(
  java.io.File.isDirectory()Z
  java.io.FileInputStream.read([B)I
)*

--------------------------------------------------------------------------------
Specification 10:
(
  org.junit.runners.model.FrameworkMember.isShadowedBy(Lorg/junit/runners/model/FrameworkMember;)Z
  org.junit.runners.model.FrameworkMethod.isShadowedBy(Lorg/junit/runners/model/FrameworkMethod;)Z
)*

--------------------------------------------------------------------------------
Specification 11:
(
  org.junit.runners.model.FrameworkMethod.invokeExplosively(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
  org.junit.runners.model.FrameworkMethod$1.run()Ljava/lang/Object;
)*

--------------------------------------------------------------------------------
Specification 12:
(
  java.util.Comparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
  org.junit.internal.MethodSorter$2.compare(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I
)*

--------------------------------------------------------------------------------
Specification 13:
(
  org.junit.validator.AnnotationsValidator$AnnotatableValidator.validateAnnotatable(Lorg/junit/runners/model/Annotatable;)Ljava/util/List;
  org.junit.runners.model.Annotatable.getAnnotations()[Ljava/lang/annotation/Annotation;
)*

--------------------------------------------------------------------------------
Specification 14:
(
  java.io.File.toPath()Ljava/nio/file/Path;
  java.io.File.lastModified()J
)*

--------------------------------------------------------------------------------
Specification 15:
(
  org.junit.runners.model.FrameworkMethod.isPublic()Z
  org.junit.runners.model.FrameworkMember.getAnnotations()[Ljava/lang/annotation/Annotation;
)*

--------------------------------------------------------------------------------
Specification 16:
(
  org.junit.runners.model.TestClass.collectAnnotatedMethodValues(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;Lorg/junit/runners/model/MemberValueConsumer;)V
  org.junit.runners.model.TestClass.collectAnnotatedFieldValues(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;Lorg/junit/runners/model/MemberValueConsumer;)V
)*

--------------------------------------------------------------------------------
Specification 17:
(
  org.junit.runners.model.FrameworkMethod.validatePublicVoid(ZLjava/util/List;)V
  org.junit.runners.model.FrameworkMethod.isStatic()Z
)*

--------------------------------------------------------------------------------
Specification 18:
(
  java.util.Set.iterator()Ljava/util/Iterator;
  java.util.Map.entrySet()Ljava/util/Set;
)*

--------------------------------------------------------------------------------
Specification 19:
(
  java.io.OutputStreamWriter.write(Ljava/lang/String;)V
  java.io.OutputStreamWriter.close()V
)*

--------------------------------------------------------------------------------
Specification 20:
(
  org.kamranzafar.jtar.TarEntry.writeEntryHeader([B)V
  org.kamranzafar.jtar.TarEntry.computeCheckSum([B)J
)*

--------------------------------------------------------------------------------
Specification 21:
(
  java.util.Map.containsKey(Ljava/lang/Object;)Z
  java.util.Map.get(Ljava/lang/Object;)Ljava/lang/Object;
)*

--------------------------------------------------------------------------------
Specification 22:
(
  org.kamranzafar.jtar.TarInputStream.getNextEntry()Lorg/kamranzafar/jtar/TarEntry;
  org.kamranzafar.jtar.TarInputStream.closeCurrentEntry()V
)*

--------------------------------------------------------------------------------
